Index: product/src/test/java/com/kam/order/product/unitTest/ProductControllerTest.java
===================================================================
diff --git a/product/src/test/java/com/kam/order/product/unitTest/ProductControllerTest.java b/product/src/test/java/com/kam/order/product/unitTest/ProductControllerTest.java
--- a/product/src/test/java/com/kam/order/product/unitTest/ProductControllerTest.java	
+++ b/product/src/test/java/com/kam/order/product/unitTest/ProductControllerTest.java	
@@ -136,7 +136,7 @@
         willDoNothing().given(this.productService).deleteProductByCode(code);
 
         mockMvc.perform(delete("/product/{code}", code))
-                .andExpect(status().isOk());
+                .andExpect(status().isNoContent());
 
         verify(this.productService).deleteProductByCode(code);
     }
Index: .idea/workspace.xml
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -6,11 +6,18 @@
   <component name="ChangeListManager">
     <list default="true" id="ada2c4e5-8e1f-459e-b932-f51aec9daa42" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/order/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/order/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/order/target/classes/com/kam/order/models/Order.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/product/data/dump.rdb" beforeDir="false" afterPath="$PROJECT_DIR$/product/data/dump.rdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/product/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/product/docker-compose.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/product/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/product/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/README.md" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/index.css" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/saved_resource.html" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/swagger-initializer.js.download" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/swagger-ui-bundle.js.download" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/swagger-ui-standalone-preset.js.download" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Swagger UI_files/swagger-ui.css" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/order/src/main/java/com/kam/order/models/order/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/order/src/main/java/com/kam/order/models/order/Order.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/order/src/main/java/com/kam/order/service/CustomerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/order/src/main/java/com/kam/order/service/CustomerService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/product/target/classes/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/product/target/classes/application.yml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,6 +33,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="22-create-crud-operations-for-order-microservice" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -43,19 +55,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "jdk.selected.JAVA_MODULE": "19",
-    "last_opened_file_path": "E:/Courses/Spring Boot Projects/backend/order/src/main/java/com/kam/order/controller",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;19&quot;,
+    &quot;last_opened_file_path&quot;: &quot;E:/Courses/Spring Boot Projects/backend/order/src/main/java/com/kam/order/models/order&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="E:\Courses\Spring Boot Projects\backend\order\src\main\java\com\kam\order\models\order" />
       <recent name="E:\Courses\Spring Boot Projects\backend\order\src\main\java\com\kam\order\controller" />
       <recent name="E:\Courses\Spring Boot Projects\backend\order\src\main\java\com\kam\order\models" />
       <recent name="E:\Courses\Spring Boot Projects\backend\order\src\main\java\com\kam\order" />
@@ -66,69 +79,90 @@
       <recent name="com.kam.order.repository" />
     </key>
   </component>
-  <component name="RunManager">
-    <configuration name="order: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
-      <deployment type="docker-compose.yml">
-        <settings>
-          <option name="sourceFilePath" value="order/docker-compose.yml" />
-        </settings>
-      </deployment>
-      <method v="2" />
+  <component name="RunManager" selected="JUnit.DatabaseIntegrationTests">
+    <configuration name="DatabaseIntegrationTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="product" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.kam.order.product.integration.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.kam.order.product.integration" />
+      <option name="MAIN_CLASS_NAME" value="com.kam.order.product.integration.DatabaseIntegrationTests" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="order.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
-      <deployment type="docker-compose.yml">
-        <settings>
-          <option name="services">
-            <list>
-              <option value="postgres" />
-            </list>
-          </option>
-          <option name="sourceFilePath" value="order/docker-compose.yml" />
-        </settings>
-      </deployment>
-      <method v="2" />
+    <configuration name="ProductControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="product" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.kam.order.product.unitTest.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.kam.order.product.unitTest" />
+      <option name="MAIN_CLASS_NAME" value="com.kam.order.product.unitTest.ProductControllerTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="product: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
-      <deployment type="docker-compose.yml">
-        <settings>
-          <option name="sourceFilePath" value="product/docker-compose.yml" />
-        </settings>
-      </deployment>
-      <method v="2" />
+    <configuration name="ProductControllerTest.deleteProduct_ShouldDeleteProduct" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="product" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.kam.order.product.unitTest.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.kam.order.product.unitTest" />
+      <option name="MAIN_CLASS_NAME" value="com.kam.order.product.unitTest.ProductControllerTest" />
+      <option name="METHOD_NAME" value="deleteProduct_ShouldDeleteProduct" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="product.cache: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
-      <deployment type="docker-compose.yml">
-        <settings>
-          <option name="services">
-            <list>
-              <option value="cache" />
-            </list>
-          </option>
-          <option name="sourceFilePath" value="product/docker-compose.yml" />
-        </settings>
-      </deployment>
-      <method v="2" />
+    <configuration name="ProductRepositoryTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="product" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.kam.order.product.unitTest.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.kam.order.product.unitTest" />
+      <option name="MAIN_CLASS_NAME" value="com.kam.order.product.unitTest.ProductRepositoryTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="product.mongo-express: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
-      <deployment type="docker-compose.yml">
-        <settings>
-          <option name="services">
-            <list>
-              <option value="mongo-express" />
-            </list>
-          </option>
-          <option name="sourceFilePath" value="product/docker-compose.yml" />
-        </settings>
-      </deployment>
-      <method v="2" />
+    <configuration name="ProductServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="product" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.kam.order.product.unitTest.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.kam.order.product.unitTest" />
+      <option name="MAIN_CLASS_NAME" value="com.kam.order.product.unitTest.ProductServiceTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Docker.order: Compose Deployment" />
-        <item itemvalue="Docker.product.mongo-express: Compose Deployment" />
-        <item itemvalue="Docker.product: Compose Deployment" />
-        <item itemvalue="Docker.order.postgres: Compose Deployment" />
-        <item itemvalue="Docker.product.cache: Compose Deployment" />
+        <item itemvalue="JUnit.DatabaseIntegrationTests" />
+        <item itemvalue="JUnit.ProductControllerTest.deleteProduct_ShouldDeleteProduct" />
+        <item itemvalue="JUnit.ProductControllerTest" />
+        <item itemvalue="JUnit.ProductRepositoryTest" />
+        <item itemvalue="JUnit.ProductServiceTest" />
       </list>
     </recent_temporary>
   </component>
Index: order/src/main/java/com/kam/order/service/CustomerService.java
===================================================================
diff --git a/order/src/main/java/com/kam/order/service/CustomerService.java b/order/src/main/java/com/kam/order/service/CustomerService.java
--- a/order/src/main/java/com/kam/order/service/CustomerService.java	
+++ b/order/src/main/java/com/kam/order/service/CustomerService.java	
@@ -1,15 +1,11 @@
 package com.kam.order.service;
 
-
-import com.kam.order.models.order.Order;
 import com.kam.order.models.user.Customer;
 import com.kam.order.repository.CustomerRepository;
 import lombok.AllArgsConstructor;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
-
 import java.util.List;
-import java.util.Optional;
 
 @Service
 @AllArgsConstructor
@@ -37,6 +33,4 @@
         return this.customerRepository.findCustomerById(customerId)
                 .orElseThrow(() -> new IllegalArgumentException("Customer not found"));
     }
-
-
 }
Index: order/src/main/java/com/kam/order/models/order/Order.java
===================================================================
diff --git a/order/src/main/java/com/kam/order/models/order/Order.java b/order/src/main/java/com/kam/order/models/order/Order.java
--- a/order/src/main/java/com/kam/order/models/order/Order.java	
+++ b/order/src/main/java/com/kam/order/models/order/Order.java	
@@ -5,7 +5,6 @@
 import lombok.Setter;
 import org.hibernate.annotations.CreationTimestamp;
 import org.hibernate.annotations.UpdateTimestamp;
-
 import java.math.BigDecimal;
 import java.util.Date;
 import java.util.HashSet;
Index: product/target/classes/application.yml
===================================================================
diff --git a/product/target/classes/application.yml b/product/target/classes/application.yml
--- a/product/target/classes/application.yml	
+++ b/product/target/classes/application.yml	
@@ -5,8 +5,6 @@
     mongodb:
       uri: mongodb://localhost:27017/product-db
       database: product-db
-      username: root
-      password: root
 
   cache:
    redis:
Index: product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java
===================================================================
diff --git a/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java b/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java
--- a/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java	
+++ b/product/src/test/java/com/kam/order/product/unitTest/ProductServiceTest.java	
@@ -1,5 +1,6 @@
 package com.kam.order.product.unitTest;
 
+import com.kam.order.product.exceptions.ProductNotFoundException;
 import com.kam.order.product.models.Product;
 import com.kam.order.product.repositories.ProductRepository;
 import com.kam.order.product.services.impl.ProductServiceImpl;
@@ -106,10 +107,9 @@
         String code = "123";
         given(productRepository.findByCode(code)).willReturn(Optional.empty());
 
-        Exception exception = assertThrows(IllegalArgumentException.class,
+        ProductNotFoundException exception = assertThrows(ProductNotFoundException.class,
                 () -> productService.getProductByCode(code));
-        assertEquals("Product not found!", exception.getMessage());
-
+        assertEquals("The product with code "+code+" is not found.", exception.getMessage());
     }
 
     @Test
@@ -154,14 +154,14 @@
         given(this.productRepository.save(this.product1)).willReturn(this.product1);
 
 
-        Exception exception = assertThrows(IllegalArgumentException.class,
+        ProductNotFoundException exception = assertThrows(ProductNotFoundException.class,
                 ()-> this.productService.updateProduct(code, new Product(
                         null,
                         "159",
                         "product 3",
                         null
                 )));
-        assertEquals("Product not found!", exception.getMessage());
+        assertEquals("The product with code "+code+" is not found.", exception.getMessage());
 
         verify(this.productRepository).findByCode(code);
         verify(this.productRepository, never()).save(this.product1);
